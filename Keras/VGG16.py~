import os
os.environ['CUDA_VISIBLE_DEVICES'] = '0'

from keras.applications.vgg16 import VGG16
from keras.preprocessing.image import load_img as load
from keras.preprocessing.image import img_to_array
from keras.applications.vgg16 import preprocess_input
from keras.applications.vgg16 import decode_predictions

model = VGG16()

image = load('../mug.jpg', target_size=(224,224))
image = img_to_array(image)
#the first entry is the numbers of images
image = image.reshape((1, image.shape[0], image.shape[1], image.shape[2]))
# subtract the mean RGB value, computed on the training set, from each pixel
image = preprocess_input(image) 

#make prediction
yhat = model.predict(image)

label = decode_predictions(yhat)
label = label[0][:2]

print('%s (%.2f%%)' % (label[0][1], label[0][2]*100))
print('%s (%.2f%%)' % (label[1][1], label[1][2]*100))
print('%s (%.2f%%)' % (label[2][1], label[2][2]*100))
